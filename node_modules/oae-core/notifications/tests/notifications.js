casper.echo('Widget - notifications', 'INFO');

/**
 * Verify that the notifications can be opened
 */
var verifyOpenNotifications = function() {
	// Assert that the button to open the notifications exists
	casper.test.assertExists('#topnavigation-left .oae-trigger-notifications', 'The notification trigger is present');
	// Open the notifications
	casper.click('#topnavigation-left .oae-trigger-notifications');
	// Wait for the notifications container to load
	casper.waitForSelector('#notifications-container', function() {
		// Assert that the notification container exists
		casper.test.assertExists('#notifications-container', 'The notification container is present');
		// Close the notification container
		casper.click('#topnavigation-left .oae-trigger-notifications');
	});
};

/**
 * Open the notifications without verifying/testing
 */
var openNotifications = function() {
	casper.waitForSelector('#topnavigation-left .oae-trigger-notifications', function() {
		// Open the notifications
		casper.click('#topnavigation-left .oae-trigger-notifications');
		// Wait for the container to load, so that the tests can be done immediatly after calling this function
		casper.waitForSelector('#notifications-container', function() {});
	});
};

/**
 * Verify that the add to group notification shows
 *
 * @param	{Object}	user 	The object of the user that added the other user to the group
 * @param	{Object}	group 	The object of the group the user was added to
 */
var verifyAddToGroupNotification = function(user, group) {
	// Assert that the following notification exists '"username" added you to the group "groupname"'
	// Also test instead of only username and groupname on the links to the user and group so that you know those exists.
	casper.test.assertSelectorHasText('#notifications-container li a', user.displayName, 
		'\'username\' in the notification "\'username\' added you to the group \'groupname\'" is present');
	casper.test.assertTextExists('added you to the group', 
		'The sentence "added you to the group" from the notification of added to a group is present');
	casper.test.assertSelectorHasText('#notifications-container li a', group.displayName, 
		'\'groupname\' in the notification "\'username\' added you to the group \'groupname\'" is present');
	casper.test.assertExists('#notifications-container li a[href="' + user.profilePath + '"]', 
		'The link to the user from the notification of added to a group is present');
	casper.test.assertExists('#notifications-container li a[href="' + group.profilePath + '"]', 
		'The link to the group from the notification of added to a group is present');
};

/**
 * Verify that the created discussion notification shows
 *
 * @param	{Object}	user 	The object of the user that created the discussion
 * @param	{Object}	group 	The object of the group the discussion was created in
 */
var verifyCreateDiscussionNotification = function(user, discussionName) {
	// Assert that the following notification exists '"username" started the discussion "discussionName"'
	// Also test instead of only username and discussionName on the link to the user.
	casper.test.assertSelectorHasText('#notifications-container li a',user.displayName,
		'"username" in the notification "\'username\' started the discussion \'discussionName\'" is present');
	casper.test.assertTextExists('started the discussion',
		'The sentence "started the discussion" from the notification of created a discussion is present');
	casper.test.assertSelectorHasText('#notifications-container li a', discussionName,
		'"discussionName" in the notification "\'username\' started the discussion \'discussionName\'" is present');
	casper.test.assertExists('#notifications-container li a[href="' + user.profilePath + '"]',
		'The link to the user from the notification of created a discussion is present');
};

casper.start('http://test.oae.com', function(){
	// Make two users to be able to test with
	var user1 = null;
	var user2 = null;
    userUtil().createUsers(2, function(users) {
        user1 = users[0];
        user2 = users[1];
    });

    // Log in with user1
	casper.then(function() {
		userUtil().doLogIn(user1.username, 'password');
	});

	// Make a group for testing purposes
	var group1 = null;
	casper.then(function() {
		groupUtil().createGroup(function(group) {
			group1 = group;
		});
	});

	// Add user to group for testing purposes
	casper.then(function() {
		groupUtil().addUserToGroup(user2.username, group1.profilePath);
	});

	// Create a discussion for testing purposes
	var discussionName1 = null;
	casper.then(function() {
		discussionUtil().createGroupDiscussion(group1.profilePath, function(discussionName) {
			discussionName1 = discussionName;
			casper.echo(discussionName1);
		});
	});

	// Do the actual testing
	casper.thenOpen('http://test.oae.com/me', function() {
		casper.waitForSelector('#topnavigation-left', function() {

			// Verify that the notifications can be opened
			casper.then(function() {
				casper.echo('Verify open notifications');
				verifyOpenNotifications();
			});

			// Change to the user to which the notifications are shown
			casper.then(function() {
				userUtil().doLogOut();
				userUtil().doLogIn(user2.username, 'password');
			});

			// Open the notifications
			casper.then(function() {
				openNotifications();
			})

			// Verify the added to group notification
			casper.then(function() {
				casper.echo('Verify added to group notification');
				verifyAddToGroupNotification(user1, group1);
			});

			// Verify the created discussion notification
			casper.then(function() {
				casper.echo('Verify created discussion in group notification');
				verifyCreateDiscussionNotification(user1, discussionName1);
			});
		});
	});

	// Log out again
	casper.then(function(){
		userUtil().doLogOut();
	});
});

casper.run(function() {
	casper.test.done();
});
