var casper = require('casper').create()
casper.echo('Widget - notifications', 'INFO');
casper.options.waitTimeout = 20000;

/**
 * Verify that the notifications can be opened
 */
var verifyOpenNotifications = function() {
	// Assert that the button to open the notifications exists
	casper.test.assertExists('#topnavigation-left .oae-trigger-notifications', 'The notification trigger is present');
	// Open the notifications
	casper.click('#topnavigation-left .oae-trigger-notifications');
	// Wait for the notifications container to load
	casper.waitForSelector('#notifications-container', function() {
		// Assert that the notification container exists
		casper.test.assertExists('#notifications-container', 'The notification container is present');
		// Close the notification container
		casper.click('#topnavigation-left .oae-trigger-notifications');
	});
};

/**
 * Open the notifications without verifying/testing
 */
var openNotifications = function() {
	casper.waitForSelector('#topnavigation-left .oae-trigger-notifications', function() {
		// Open the notifications
		casper.click('#topnavigation-left .oae-trigger-notifications');
		// Wait for the container to load, so that the tests can be done immediatly after calling this function
		casper.waitForSelector('#notifications-container', function() {});
	});
};

/**
 * Verify that the add to group notification shows
 *
 * @param	{Object}	user 	The object of the user that added the other user to the group
 * @param	{Object}	group 	The object of the group the user was added to
 * @param	{Int}		n 		The index of the notification in the notifications list
 *								(higher if it was made first, lower if it was made last)
 */
var verifyAddToGroup = function(user, group, n) {
	// Assert that the following notification exists '"username" added you to the group "groupname"'
	// Also test instead of only username and groupname on the links to the user and group so that you know those exists.
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ') a', user.displayName, 
		'\'username\' in the notification "\'username\' added you to the group \'groupname\'" is present');
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ')', 'added you to the group', 
		'The sentence "added you to the group" from the notification of added to a group is present');
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ') a', group.displayName, 
		'\'groupname\' in the notification "\'username\' added you to the group \'groupname\'" is present');
	casper.test.assertExists('#notifications-container li:nth-child(' + n + ') a[href="' + user.profilePath + '"]', 
		'The link to the user from the notification of added to a group is present');
	casper.test.assertExists('#notifications-container li:nth-child(' + n + ') a[href="' + group.profilePath + '"]', 
		'The link to the group from the notification of added to a group is present');
};

/**
 * Verify that the created discussion notification shows
 *
 * @param	{Object}	user 	The object of the user that created the discussion
 * @param	{Object}	group 	The object of the group the discussion was created in
 * @param	{Int}		n 		The index of the notification in the notifications list
 *								(higher if it was made first, lower if it was made last)
 */
var verifyCreateDiscussion = function(user, discussionName, n) {
	// Assert that the following notification exists '"username" started the discussion "discussionName"'
	// Also test instead of only username and discussionName on the link to the user.
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ') a',user.displayName,
		'"username" in the notification "\'username\' started the discussion \'discussionName\'" is present');
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ')', 'started the discussion',
		'The sentence "started the discussion" from the notification of created a discussion is present');
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ') a', discussionName,
		'"discussionName" in the notification "\'username\' started the discussion \'discussionName\'" is present');
	casper.test.assertExists('#notifications-container li:nth-child(' + n + ') a[href="' + user.profilePath + '"]',
		'The link to the user from the notification of created a discussion is present');
};

/**
 * Verify that the uploaded file notification shows
 *
 * @param	{Object}	user 		The object of the user that made the comment
 * @param	{String}	fileName 	The name of the file that was commented on
 * @param	{String}	fileUrl 	The url to the file that was commented on
 * @param	{Int}		n 		The index of the notification in the notifications list
 *								(higher if it was made first, lower if it was made last)
 */
var verifyCreatedFile = function(user, fileName, fileUrl, n){
	// Assert that the following notification exists '"username" uploaded "fileName"'
	// Also test instead of only username and fileName on the link to the user and file.
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ') a',user.displayName,
		'"username" in the notification "\'username\' uploaded \'filename\'" is present');
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ')', 'uploaded',
		'The sentence "uploaded" from the notification of uploaded is present');
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ') a', fileName,
		'"filename" in the notification "\'username\' uploaded \'filename\'" is present');
	casper.test.assertExists('#notifications-container li:nth-child(' + n + ') a[href="' + user.profilePath + '"]',
		'The link to the user from the notification of uploaded is present');
	casper.test.assertExists('#notifications-container li:nth-child(' + n + ') a[href="' + fileUrl + '"]',
		'The link to the file from the notification of uploaded is present');
};

/**
 * Verify that the commented on file notification shows
 *
 * @param	{Object}	user 		The object of the user that made the comment
 * @param	{String}	fileName 	The name of the file that was commented on
 * @param	{String}	fileUrl 	The url to the file that was commented on
 * @param	{Int}		n 		The index of the notification in the notifications list
 *								(higher if it was made first, lower if it was made last)
 */
var verifyCommentOnFile = function(user, fileName, fileUrl, n){
	// Assert that the following notification exists '"username" commented on the file "fileName"'
	// Also test instead of only username and fileName on the link to the user and file.
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ') a',user.displayName,
		'"username" in the notification "\'username\' commented on the file \'filename\'" is present');
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ')', 'commented on the file',
		'The sentence "commented on the file" from the notification of commented on the file is present');
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ') a', fileName,
		'"filename" in the notification "\'username\' commented on the file \'filename\'" is present');
	casper.test.assertExists('#notifications-container li:nth-child(' + n + ') a[href="' + user.profilePath + '"]',
		'The link to the user from the notification of commented on the file is present');
	casper.test.assertExists('#notifications-container li:nth-child(' + n + ') a[href="' + fileUrl + '"]',
		'The link to the file from the notification of commented on the file is present');
};

/**
 * Verify that the posted to disussion notification shwos
 *
 * @param	{Object}	user 			The object of the user that made the post
 * @param	{String}	discussionName 	The name of the discussion that was posted on
 * @param	{String}	discussionUrl 	The url to the discussion that was posted on
 * @param	{Int}		n 		The index of the notification in the notifications list
 *								(higher if it was made first, lower if it was made last)
 */
var verifyPostToDiscussion = function(user, discussionName, n){
	var js = casper.evaluate(function() {
	    return document.querySelector('#notifications-container li:nth-child(' + n + ')'); 
	});	
	casper.echo(js); 
	// Assert that the following notification exists '"username" posted to the discussion "discussionName"'
	// Also test instead of only username and discussionName on the link to the user and discussion.
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ') a',user.displayName,
		'"username" in the notification "\'username\' posted to the discussion \'discussionName\'" is present');
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ')', 'posted to the discussion',
		'The sentence "posted to the discussion" from the notification of posted to the discussion is present');
	casper.test.assertSelectorHasText('#notifications-container li:nth-child(' + n + ') a', discussionName,
		'"discussionName" in the notification "\'username\' posted to the discussion \'discussionName\'" is present');
	casper.test.assertExists('#notifications-container li:nth-child(' + n + ') a[href="' + user.profilePath + '"]',
		'The link to the user from the notification of posted to the discussion is present');
};

casper.start('http://test.oae.com', function(){
	// Make two users to be able to test with
	var user1 = null;
	var user2 = null;
    userUtil().createUsers(2, function(users) {
        user1 = users[0];
        user2 = users[1];
    });

    // Log in with user1
	casper.then(function() {
		userUtil().doLogIn(user1.username, 'password');
	});

	// Make a group for testing purposes
	var group1 = null;
	casper.then(function() {
		groupUtil().createGroup(function(group) {
			group1 = group;
		});
	});

	// Add user to group for testing purposes
	casper.then(function() {
		groupUtil().addUserToGroup(user2.username, group1.profilePath);
	});

	// Create a discussion for testing purposes
	var discussionName1 = null;
	var discussionUrl1  = null;
	casper.then(function() {
		discussionUtil().createGroupDiscussion(group1, function(discussionName, discussionUrl) {
			discussionName1 = discussionName;
			discussionUrl1  = discussionUrl;
		});
	});

	// Make a file
	var fileName1 = null
	var fileUrl1  = null;
	casper.then(function() {
		contentUtil().createGroupFile(group1, function(fileUrl) {
			fileUrl1  = fileUrl
		});
	});

	// Comment on the made file
	casper.then(function() {
		contentUtil().commentOnFile(fileUrl1, 'Comment!');
	});

	// Post a post to discussion1
	casper.then(function() {
		discussionUtil().postToDiscussionUrl(discussionUrl1, 'Post!');
	});


	// Do the actual testing
	casper.thenOpen('http://test.oae.com/me', function() {
		casper.waitForSelector('.activity-widget', function() {
			// Verify that the notifications can be opened
			casper.then(function() {
				casper.echo('Verify open notifications', 'INFO');
				verifyOpenNotifications();
			});

			// Change to the user to which the notifications are shown
			casper.then(function() {
				userUtil().doLogOut();
				userUtil().doLogIn(user2.username, 'password');
			});

			// Open the notifications
			casper.then(function() {
				openNotifications();
			});

			// Verify the added to group notification
			casper.then(function() {
				casper.echo('Verify added to group notification', 'INFO');
				verifyAddToGroup(user1, group1, 6);
			});

			// Verify the created discussion notification
			casper.then(function() {
				// There can't be tested on the discussionUrl because it is the full url and not only /tenant/....
				casper.echo('Verify created discussion in group notification', 'INFO');
				verifyCreateDiscussion(user1, discussionName1, 5);
			});

			// Verify the created file notification
			casper.then(function() {
				casper.echo('Verify created file notification', 'INFO');
				verifyCreatedFile(user1, 'balloons.jpg', fileUrl1, 4);
			});

			// Verify the conneted on content notification
			casper.then(function() {
				casper.echo('Verify comment on file notification', 'INFO');
				// balloons.jpg is the name of the file that gets uploaded in contentUtil()
				verifyCommentOnFile(user1, 'balloons.jpg', fileUrl1, 3);
			});

			// Verify the posted to discussion notification
			casper.then(function() {
				casper.echo('Verify post to discussion notification', 'INFO');
				// For some reason the list starts at element 2
				verifyPostToDiscussion(user1, discussionName1, 2);
			});
		});
	});

	// Log out again
	casper.then(function(){
		userUtil().doLogOut();
	});
});

casper.run(function() {
	casper.test.done();
});
